INSERT OVERWRITE TABLE fc_inbound_flow_l1_fact
select 
a.putlist_item_id as putlist_item_id,
a.mr_created_at as mr_created_at,
a.mr_created_date_key as mr_created_date_key,
a.mr_created_time_key as mr_created_time_key,
a.mr_created_by as mr_created_by,
a.mr_destination_type as mr_destination_type,
a.mr_movement_request_id as mr_movement_request_id,
a.mr_source_type as mr_source_type,
a.mr_status as mr_status,
a.mr_total_quantity as mr_total_quantity,
a.mr_type as mr_type,
a.mr_updated_at as mr_updated_at,
a.mr_updated_date_key as mr_updated_date_key,
a.mr_updated_time_key as mr_updated_time_key,
a.mr_warehouse_id as mr_warehouse_id,
a.ti_task_id as ti_task_id,
a.mr_warehouse_dim_key as mr_warehouse_dim_key,
a.mri_source_location_dim_key as mri_source_location_dim_key,
a.mri_destination_location_dim_key as mri_destination_location_dim_key,
a.putlist_item_quantity as putlist_item_quantity,
a.grn_document_type as grn_document_type,
a.grn_created_at as grn_created_at,
a.grn_created_date_key as grn_created_date_key,
a.grn_created_time_key as grn_created_time_key,
a.irn_internal_id as irn_internal_id,
a.inbound_request_id as inbound_request_id,
a.shipment_id as shipment_id,
a.srn_id as srn_id,
a.grn_quantity as grn_quantity,
a.qc_pass_quantity as qc_pass_quantity,
a.grn_id as grn_id,
a.first_receiving_id as first_receiving_id,
a.first_receiving_time as first_receiving_time,
a.company as company,
a.inventory_item_id as inventory_item_id,
a.product_key as product_key,
unproductive_time_query.unproductive_time as unproductive_time,
a.putaway_at,
a.putaway_at_date_key,
a.putaway_at_time_key,
a.first_receiving_date_key,
a.first_receiving_time_key,
a.irn_submission_time,
a.irn_submission_date_key,
a.irn_submission_time_key,
a.irn_expected_quantity,
a.irn_received_quantity,
a.grn_warehouse_id,
a.grn_warehouse_id_key,
a.receiving_warehouse,
a.receiving_warehouse_key,
a.first_receiving_type,
a.number1 as number1,
a.number2 as number2,
a.number3 as number3,
a.imei_mapping_present_flag as imei_mapping_present_flag
from
bigfoot_external_neo.scp_warehouse__fc_inbound_flow_l1_hive_fact a
left join 
(
select 
inf.inventory_item_id as inventory_item_id,
sum(if(sh.end_time<inf.mr_updated_at,UNIX_TIMESTAMP(sh.end_time),(UNIX_TIMESTAMP(inf.mr_updated_at)))
- if(sh.start_time>inf.first_receiving_time,UNIX_TIMESTAMP(sh.start_time),(UNIX_TIMESTAMP(inf.first_receiving_time))))as unproductive_time
from 
bigfoot_external_neo.scp_warehouse__fc_inbound_flow_l1_hive_fact as inf
left join 
(
select
warehouse_id,
start_time,
end_time
 from
bigfoot_common.fc_inbound_unprod_map
where start_time between date_Add(to_date(from_unixtime(unix_timestamp())),-93)  and 
date_Add(to_date(from_unixtime(unix_timestamp())),1)
) sh on inf.mr_warehouse_id=sh.warehouse_id and (inf.first_receiving_time is not null 
and inf.mr_updated_at is not null)
where
(
(sh.start_time<inf.first_receiving_time and sh.end_time>inf.first_receiving_time)
or
(sh.start_time<inf.mr_updated_at and sh.end_time>inf.mr_updated_at)
or
(sh.start_time>inf.first_receiving_time and sh.end_time<inf.mr_updated_at)
)
group by inf.inventory_item_id
) unproductive_time_query on (a.inventory_item_id=unproductive_time_query.inventory_item_id);