INSERT OVERWRITE TABLE rvp_ekl_pv_l3_hive_fact
select distinct
liq.inventory_item_id                         ,
liq.PV_Bucket                                 ,
liq.pv_id                                     ,
liq.quantity                                  ,
liq.Initial_PV_Reasons                        ,
liq.Initial_PV_Sub_Reasons                    ,
liq.Initial_PV_Reasons_desc                   ,
liq.Initial_PV_Sub_Reasons_desc               ,
liq.initial_pv_done_by                        ,
liq.Detailed_PV_Reasons                       ,
liq.Detailed_PV_Sub_Reasons                   ,
liq.Detailed_PV_Reasons_desc                  ,
liq.Detailed_PV_Sub_Reasons_desc              ,
liq.Detailed_pv_done_by                       ,
liq.RE_PV_Reasons                             ,
liq.RE_PV_Sub_Reasons                         ,
liq.RE_PV_Reasons_desc                        ,
liq.RE_PV_Sub_Reasons_desc                    ,
liq.RE_PV_done_by                             ,
liq.external_inspection_Reasons               ,
liq.external_inspection_Sub_Reasons           ,
liq.external_inspection_Reasons_desc          ,
liq.external_inspection_Sub_Reasons_desc      ,
liq.external_inspection_done_by               ,
liq.created_at                                ,
liq.qc_ticket_item_created_date_key           ,
liq.qc_ticket_item_created_time_key           ,
liq.Initial_PV_updated_at                     ,
liq.Initial_PV_updated_date_key               ,
liq.initial_pv_updated_time_key               ,
liq.Detailed_PV_updated_at                    ,
liq.Detailed_PV_updated_date_key              ,
liq.Detailed_pv_updated_time_key              ,
liq.RE_PV_updated_at                          ,
liq.RE_PV_updated_date_key                    ,
liq.RE_PV_updated_time_key                    ,
liq.external_inspection_updated_at            ,
liq.external_inspection_updated_date_key      ,
liq.external_inspection_updated_time_key      ,
liq.product_detail_hive_dim_key               ,
liq.fin_inv_location_max                      ,
liq.shipment_is_tampered                      ,
liq.shipment_id   as wh_shipment_id                            ,
liq.shipment_display_id                       ,
liq.shipmentid                                ,
liq.return_id                                 ,
liq.return_item_id                            ,
liq.courier_name  ,
liq.return_item_shipment_id       ,
liq.return_item_tracking_id       ,
liq.return_quantity_recvd_in_wh    ,
liq.return_quantity_rvp_done       ,
liq.return_quantity_qc_passed      ,
liq.return_quantity_qc_failed      ,
liq.oms_qc_reason                  ,
liq.oms_qc_comment                 ,
liq.seller_id                      ,
liq.seller_bucket,
liq.return_reason                             ,
liq.return_sub_reason               ,
liq.exchange_fsn_key,
liq.exchange_fsn,
liq.return_pickup_promise_date      ,
liq.external_order_id               ,
liq.return_status                   ,
liq.return_to_address_id            ,
liq.return_customer_will_send       ,
liq.return_action                   ,
liq.return_type                     ,
liq.return_request_channel          ,
liq.return_amount                   ,
liq.return_comments                 ,
liq.shipment_received_date_key                ,
liq.variance_inventory_item_id                ,
liq.variance_reason_dim_key                   ,
liq.return_item_product_id_key                ,
liq.iiv_product_detail_hive_dim_key           ,
liq.variance_wid                              ,
--if(isnull(return_type),wh_rvp_rto_flag,return_type) as ri_return_type
if(liq.return_type is null,liq.wh_rvp_rto_flag,liq.return_type) as ri_return_type,
------------------------------------------
t1.shipment_id as ekl_unique_key,
t1.vendor_tracking_id as shipment_id,
t1.ekl_shipment_type as ekl_shipment_type,
t1.shipment_current_status  as shipment_current_status,
t1.shipment_carrier as shipment_carrier,
t1.ekl_fin_zone as ekl_fin_zone,
t1.seller_type as seller_type,
t1.first_mh_tc_receive_date_key as first_mh_tc_receive_date_key,
t1.first_mh_tc_receive_time_key as first_mh_tc_receive_time_key,
t1.last_mh_tc_receive_date_key as last_mh_tc_receive_date_key,
t1.last_mh_tc_receive_time_key as last_mh_tc_receive_time_key,
t1.first_mh_tc_outscan_date_key as first_mh_tc_outscan_date_key,
t1.first_mh_tc_outscan_time_key as first_mh_tc_outscan_time_key,
t1.last_mh_tc_outscan_date_key as last_mh_tc_outscan_date_key,
t1.last_mh_tc_outscan_time_key as last_mh_tc_outscan_time_key,
t1.first_dh_outscan_date_key as first_dh_outscan_date_key,
t1.first_dh_outscan_time_key as first_dh_outscan_time_key,
t1.last_dh_outscan_date_key as last_dh_outscan_date_key,
t1.last_dh_outscan_time_key as last_dh_outscan_time_key,
t1.fsd_first_dh_received_date_key as fsd_first_dh_received_date_key,
t1.fsd_first_dh_received_time_key as fsd_first_dh_received_time_key,
t1.fsd_last_dh_received_date_key as fsd_last_dh_received_date_key,
t1.fsd_last_dh_received_time_key as fsd_last_dh_received_time_key,
t1.shipment_delivered_at_date_key as shipment_delivery_date_key,
t1.shipment_delivered_at_time_key as shipment_delivery_time_key,
t1.shipment_weight as shipment_weight,
t1.cs_notes as cs_notes,
t1.hub_notes as hub_notes,
t1.fsd_number_of_ofd_attempts as fsd_number_of_ofd_attempts,
t1.payment_type as payment_type,
t1.shipment_value as shipment_value,
t1.reject_reason as reject_reason,
t1.reject_sub_reason as reject_sub_reason,
t1.fsd_last_ofd_date_key as fsd_last_attempted_date_key,
t1.fsd_last_ofd_time_key as fsd_last_attempted_time_key,
t1.shipment_first_consignment_co_loader as shipment_first_consignment_co_loader,
t1.shipment_last_consignment_co_loader as shipment_last_consignment_co_loader,
t1.reverse_shipment_type as reverse_shipment_type,
t1.shipment_first_received_dh_id_key ,
t1.shipment_last_received_dh_id_key,
t1.shipment_first_received_mh_id_key,
t1.shipment_last_received_mh_id_key,
t1.reverse_pickup_hub_id_key,
t1.fe_name_key,
t1.customer_address_id_key,
t15.account_id,
--lookupkey('account_id',t15.account_id) as account_hive_dim_key,
t1.destination_pincode_key,
t1.source_pincode_key,
erp.tl_verification_flag,
erp.tl_cs_override_flag,
erp.tl_checkedby,
erp.tl_ldap_id,
erp.tl_pickup_creation_date_key,
erp.tl_pickup_creation_time_key,
erp.fe_verification_flag,
erp.fe_cs_override_flag,
erp.fe_checkedby,
erp.fe_ldap_id,
erp.fe_pickup_creation_date_key,
erp.fe_pickup_creation_time_key,
--if(isnull(iiv_seller_bucket),liq_seller_bucket,iiv_seller_bucket) as seller_bucket,
--if(isnull(courier_name),if(isnull(wh_courier),if(isnull(EKL_BF_shipment_carrier),if(isnull(shipmentId),'No Courier --found',if(WildMatch(shipmentId,'FMP*','WSR*'),'EKL','3PL')),EKL_BF_shipment_carrier),wh_courier),if(wildmatch(courier_name,'*flipkart*','*fsd*','*ekl*','*eka--rt*'),'EKL','3PL')) as return_courier_bucket,
--if(isnull(ri_return_type),EKL_BF_ekl_shipment_type,ri_return_type) as return_type,
if(courier_name is null,
if(liq.shipment_courier_name is null,if(t1.shipment_carrier is null,'No Courier found',t1.shipment_carrier),liq.shipment_courier_name),if(liq.courier_name in ('flipkartlogistics','flipkartlogistics-cod'),'EKL','3PL')) as return_courier_bucket,
if(liq.return_to_address_id is null,liq.shipment_return_warehouse_id,liq.return_to_address_id) as return_warehouse,
liq.product_id_key,
liq.product_fsn,
liq.product_listing_id,
liq.product_id,
liq.packing_box_used_name,
liq.warehouse_company,
liq.shipment_item_id,
liq.return_item_product_id,
liq.return_item_product_title,
liq.pv_max_numdate,
liq.pv_max_num_date_key,
liq.pv_max_num_time_key,
liq.return_numdate,
liq.return_numdate_key,
concat(t16.account_first_name,'_',t16.account_last_name) as customer_name,
t16.account_primary_phone as customer_phone,
t16.account_primary_email as customer_email,
--if(shipment_status in ('received','returned'),shimpment_created_date_key,shimpment_created_date_key) as shipment_received_date_key,
if(shipment_status='received',shipment_rvp_received_date_key,if(shipment_status='returned',shipment_rto_received_date_key,shipment_updated_date_key)) as shipment_rto_rvp_received_date_key
from bigfoot_external_neo.scp_ekl__qc_liquidation_l2_hive_fact liq
left outer join bigfoot_external_neo.scp_ekl__shipment_hive_90_fact t1 on (t1.ekl_shipment_type in ('rvp','unapproved_rto','approved_rto') and liq.shipmentid=t1.vendor_tracking_id) 
left outer join bigfoot_external_neo.cp_user__address_hive_dim t15 on (t1.customer_address_id_key=t15.address_hive_dim_key)
left outer join bigfoot_external_neo.cp_user__account_hive_dim t16 on t15.account_id=t16.account_id
left outer join
(
select return_shipment_id,
max(if(t20.checkedby='ERP',verification_status,null)) as tl_verification_flag,
max(if(t20.checkedby='ERP',cs_override,null)) as tl_cs_override_flag,
max(if(t20.checkedby='ERP',checkedby,null)) as tl_checkedby,
max(if(t20.checkedby='ERP',agent_id,null)) as tl_ldap_id,
max(if(t20.checkedby='ERP',pickup_creation_date_key,null)) as tl_pickup_creation_date_key,
max(if(t20.checkedby='ERP',pickup_creation_time_key,null)) as tl_pickup_creation_time_key,
max(if(t20.checkedby='LM_APP',verification_status,null)) as fe_verification_flag,
max(if(t20.checkedby='LM_APP',cs_override,null)) as fe_cs_override_flag,
max(if(t20.checkedby='LM_APP',checkedby,null)) as fe_checkedby,
max(if(t20.checkedby='LM_APP',agent_id,null)) as fe_ldap_id,
max(if(t20.checkedby='LM_APP',pickup_creation_date_key,null)) as fe_pickup_creation_date_key,
max(if(t20.checkedby='LM_APP',pickup_creation_time_key,null)) as fe_pickup_creation_time_key
from bigfoot_external_neo.scp_ekl__smartpickup_l1_fact t20 
where t20.reverse_type IN ('RTO','RVP') and t20.pickup_creation_date_key>'20160101' 
group by return_shipment_id
) erp on (t1.vendor_tracking_id=erp.return_shipment_id)
;
